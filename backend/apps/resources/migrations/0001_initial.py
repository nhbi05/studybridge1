# Generated by Django 4.2.18 on 2025-01-17 16:57

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('course', models.CharField(choices=[('CS', 'Computer Science'), ('ENG', 'Engineering'), ('MED', 'Medicine'), ('BUS', 'Business'), ('LAW', 'Law')], max_length=100)),
                ('year_of_study', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')])),
                ('semester', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester')])),
            ],
            options={
                'ordering': ['course', 'year_of_study', 'semester', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('course', models.CharField(choices=[('CS', 'Computer Science'), ('ENG', 'Engineering'), ('MED', 'Medicine'), ('BUS', 'Business'), ('LAW', 'Law')], max_length=100)),
                ('year_of_study', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')])),
                ('semester', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester')])),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='notes/')),
            ],
            options={
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('course', models.CharField(choices=[('CS', 'Computer Science'), ('ENG', 'Engineering'), ('MED', 'Medicine'), ('BUS', 'Business'), ('LAW', 'Law')], max_length=100)),
                ('year_of_study', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')])),
                ('semester', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester')])),
                ('groups', models.ManyToManyField(blank=True, related_name='resources_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='resources_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('course', models.CharField(choices=[('CS', 'Computer Science'), ('ENG', 'Engineering'), ('MED', 'Medicine'), ('BUS', 'Business'), ('LAW', 'Law')], max_length=100)),
                ('year_of_study', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')])),
                ('semester', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester')])),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('tutorial_type', models.CharField(choices=[('video', 'Video Tutorial'), ('live', 'Live Session')], max_length=5)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('scheduled_time', models.DateTimeField(blank=True, null=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.courseunit')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
